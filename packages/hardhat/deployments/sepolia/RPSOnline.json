{
  "address": "0x573b8dAA397Ba6Ce0203205BB031951A2483Bf35",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "roomId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "GameCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "roomId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "GameFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "roomId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "joiner",
          "type": "address"
        }
      ],
      "name": "GameJoined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "roomId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "MoveCommitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "roomId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "move",
          "type": "uint8"
        }
      ],
      "name": "MoveRevealed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "roomId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WinningsClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "roomId",
          "type": "string"
        }
      ],
      "name": "claimWinnings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "roomId",
          "type": "string"
        }
      ],
      "name": "createGame",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "address",
          "name": "player1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "player2",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "player1Move",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "player2Move",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "revealedMove1",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "revealedMove2",
          "type": "uint8"
        },
        {
          "internalType": "enum RPSOnline.GameState",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "player1Paid",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "player2Paid",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "roomId",
          "type": "string"
        }
      ],
      "name": "getGame",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "player1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "player2",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "player1Move",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "player2Move",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "revealedMove1",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "revealedMove2",
              "type": "uint8"
            },
            {
              "internalType": "enum RPSOnline.GameState",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "winner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "betAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "player1Paid",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "player2Paid",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct RPSOnline.Game",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "roomId",
          "type": "string"
        }
      ],
      "name": "isRoomAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "roomId",
          "type": "string"
        }
      ],
      "name": "joinGame",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "roomId",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "move",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "revealMove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "roomId",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "hashedMove",
          "type": "bytes32"
        }
      ],
      "name": "submitMove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9be4d0fe2423e3327386e6a3eb7d43ecd7fd9b6b051193797375aeed3286d8d2",
  "receipt": {
    "to": null,
    "from": "0x4298D42Cf8a15B88Ee7d9CD36aD3686F9B9FD5F6",
    "contractAddress": "0x573b8dAA397Ba6Ce0203205BB031951A2483Bf35",
    "transactionIndex": 112,
    "gasUsed": "1318427",
    "logsBloom": "0x
    "blockHash": "0x3ab635c561a96bf50beb924130ad11f6a017f8b570a046dac6b5b3da260c36cd",
    "transactionHash": "0x9be4d0fe2423e3327386e6a3eb7d43ecd7fd9b6b051193797375aeed3286d8d2",
    "logs": [],
    "blockNumber": 9142849,
    "cumulativeGasUsed": "16748130",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "da95dc0c10e5284766c5b30c39dd03c5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"roomId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"GameCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"roomId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"GameFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"roomId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"joiner\",\"type\":\"address\"}],\"name\":\"GameJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"roomId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"MoveCommitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"roomId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"move\",\"type\":\"uint8\"}],\"name\":\"MoveRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"roomId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WinningsClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"roomId\",\"type\":\"string\"}],\"name\":\"claimWinnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"roomId\",\"type\":\"string\"}],\"name\":\"createGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"player1Move\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"player2Move\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"revealedMove1\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"revealedMove2\",\"type\":\"uint8\"},{\"internalType\":\"enum RPSOnline.GameState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"player1Paid\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"player2Paid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"roomId\",\"type\":\"string\"}],\"name\":\"getGame\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"player1Move\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"player2Move\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"revealedMove1\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"revealedMove2\",\"type\":\"uint8\"},{\"internalType\":\"enum RPSOnline.GameState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"player1Paid\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"player2Paid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct RPSOnline.Game\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"roomId\",\"type\":\"string\"}],\"name\":\"isRoomAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"roomId\",\"type\":\"string\"}],\"name\":\"joinGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"roomId\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"move\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"revealMove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"roomId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"hashedMove\",\"type\":\"bytes32\"}],\"name\":\"submitMove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RPSOnline.sol\":\"RPSOnline\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/RPSOnline.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ncontract RPSOnline {\\n    enum GameState { Created, Joined, MovesCommitted, Revealed, Finished }\\n    \\n    struct Game {\\n        address player1;\\n        address player2;\\n        bytes32 player1Move;\\n        bytes32 player2Move;\\n        uint8 revealedMove1;\\n        uint8 revealedMove2;\\n        GameState state;\\n        address winner;\\n        uint256 betAmount;\\n        bool player1Paid;\\n        bool player2Paid;\\n        uint256 createdAt;\\n    }\\n    \\n    mapping(string => Game) public games;\\n    \\n    event GameCreated(string indexed roomId, address indexed creator);\\n    event GameJoined(string indexed roomId, address indexed joiner);\\n    event MoveCommitted(string indexed roomId, address indexed player);\\n    event MoveRevealed(string indexed roomId, address indexed player, uint8 move);\\n    event GameFinished(string indexed roomId, address indexed winner);\\n    event WinningsClaimed(string indexed roomId, address indexed winner, uint256 amount);\\n    \\n    function createGame(string memory roomId) external payable {\\n        require(games[roomId].player1 == address(0), \\\"Room already exists\\\");\\n        \\n        games[roomId] = Game({\\n            player1: msg.sender,\\n            player2: address(0),\\n            player1Move: bytes32(0),\\n            player2Move: bytes32(0),\\n            revealedMove1: 0,\\n            revealedMove2: 0,\\n            state: GameState.Created,\\n            winner: address(0),\\n            betAmount: msg.value,\\n            player1Paid: true,\\n            player2Paid: false,\\n            createdAt: block.timestamp\\n        });\\n        \\n        emit GameCreated(roomId, msg.sender);\\n    }\\n    \\n    function joinGame(string memory roomId) external payable {\\n        Game storage game = games[roomId];\\n        require(game.player1 != address(0), \\\"Room does not exist\\\");\\n        require(game.player2 == address(0), \\\"Room is full\\\");\\n        require(game.player1 != msg.sender, \\\"Cannot join your own room\\\");\\n        require(game.state == GameState.Created, \\\"Game not available\\\");\\n        require(msg.value == game.betAmount, \\\"Incorrect bet amount\\\");\\n        \\n        game.player2 = msg.sender;\\n        game.player2Paid = true;\\n        game.state = GameState.Joined;\\n        \\n        emit GameJoined(roomId, msg.sender);\\n    }\\n    \\n    function getGame(string memory roomId) external view returns (Game memory) {\\n        return games[roomId];\\n    }\\n    \\n    function submitMove(string memory roomId, bytes32 hashedMove) external {\\n        Game storage game = games[roomId];\\n        require(game.state == GameState.Joined, \\\"Game not ready for moves\\\");\\n        require(msg.sender == game.player1 || msg.sender == game.player2, \\\"Not a player\\\");\\n        \\n        if (msg.sender == game.player1) {\\n            require(game.player1Move == bytes32(0), \\\"Move already submitted\\\");\\n            game.player1Move = hashedMove;\\n        } else {\\n            require(game.player2Move == bytes32(0), \\\"Move already submitted\\\");\\n            game.player2Move = hashedMove;\\n        }\\n        \\n        if (game.player1Move != bytes32(0) && game.player2Move != bytes32(0)) {\\n            game.state = GameState.MovesCommitted;\\n        }\\n        \\n        emit MoveCommitted(roomId, msg.sender);\\n    }\\n    \\n    function revealMove(string memory roomId, uint8 move, uint256 nonce) external {\\n        Game storage game = games[roomId];\\n        require(game.state == GameState.MovesCommitted, \\\"Moves not committed yet\\\");\\n        require(move >= 1 && move <= 3, \\\"Invalid move\\\");\\n        require(msg.sender == game.player1 || msg.sender == game.player2, \\\"Not a player\\\");\\n        \\n        bytes32 hash = keccak256(abi.encodePacked(move, nonce, msg.sender));\\n        \\n        if (msg.sender == game.player1) {\\n            require(game.player1Move == hash, \\\"Invalid reveal\\\");\\n            require(game.revealedMove1 == 0, \\\"Already revealed\\\");\\n            game.revealedMove1 = move;\\n        } else {\\n            require(game.player2Move == hash, \\\"Invalid reveal\\\");\\n            require(game.revealedMove2 == 0, \\\"Already revealed\\\");\\n            game.revealedMove2 = move;\\n        }\\n        \\n        emit MoveRevealed(roomId, msg.sender, move);\\n        \\n        if (game.revealedMove1 != 0 && game.revealedMove2 != 0) {\\n            game.winner = determineWinner(game.revealedMove1, game.revealedMove2, game.player1, game.player2);\\n            game.state = GameState.Finished;\\n            emit GameFinished(roomId, game.winner);\\n        }\\n    }\\n    \\n    function determineWinner(uint8 move1, uint8 move2, address player1, address player2) private pure returns (address) {\\n        if (move1 == move2) return address(0);\\n        if ((move1 == 1 && move2 == 3) || (move1 == 2 && move2 == 1) || (move1 == 3 && move2 == 2)) {\\n            return player1;\\n        }\\n        return player2;\\n    }\\n    \\n    function claimWinnings(string memory roomId) external {\\n        Game storage game = games[roomId];\\n        require(game.state == GameState.Finished, \\\"Game not finished\\\");\\n        require(game.player1Paid && game.player2Paid, \\\"Bets not complete\\\");\\n        \\n        uint256 totalPot = game.betAmount * 2;\\n        \\n        if (game.winner == address(0)) {\\n            // Tie - refund both players\\n            require(msg.sender == game.player1 || msg.sender == game.player2, \\\"Not a player\\\");\\n            if (msg.sender == game.player1 && game.player1Paid) {\\n                payable(game.player1).transfer(game.betAmount);\\n                game.player1Paid = false;\\n            } else if (msg.sender == game.player2 && game.player2Paid) {\\n                payable(game.player2).transfer(game.betAmount);\\n                game.player2Paid = false;\\n            }\\n        } else {\\n            // Winner takes all\\n            require(msg.sender == game.winner, \\\"Not the winner\\\");\\n            payable(game.winner).transfer(totalPot);\\n            game.player1Paid = false;\\n            game.player2Paid = false;\\n        }\\n        \\n        emit WinningsClaimed(roomId, msg.sender, game.winner == address(0) ? game.betAmount : totalPot);\\n    }\\n    \\n    function isRoomAvailable(string memory roomId) external view returns (bool) {\\n        Game memory game = games[roomId];\\n        return game.player1 != address(0) && game.player2 == address(0) && game.state == GameState.Created;\\n    }\\n}\",\"keccak256\":\"0x78e701d58fb8df222ac459651eb7780b7b83a6b99bb95473c7021639741475fa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506116e4806100206000396000f3fe60806040526004361061007b5760003560e01c80635efcb0551161004e5780635efcb0551461010a5780636d20931a1461012a5780639d38e620146101e1578063fdbcf1251461020157600080fd5b8063091c680b146100805780632ebc0504146100b55780633d536a2e146100ca5780634d92f652146100dd575b600080fd5b34801561008c57600080fd5b506100a061009b3660046113d0565b610221565b60405190151581526020015b60405180910390f35b6100c86100c33660046113d0565b610363565b005b6100c86100d83660046113d0565b6105bb565b3480156100e957600080fd5b506100fd6100f83660046113d0565b6107fd565b6040516100ac919061143d565b34801561011657600080fd5b506100c861012536600461150d565b61095a565b34801561013657600080fd5b506101c96101453660046113d0565b8051602081830181018051600082529282019190930120915280546001820154600283015460038401546004850154600586015460068701546007909701546001600160a01b0396871697958716969495939460ff80851695610100808704831696620100008104841696630100000090910490941694838316939190920416908c565b6040516100ac9c9b9a99989796959493929190611552565b3480156101ed57600080fd5b506100c86101fc3660046115ce565b610b59565b34801561020d57600080fd5b506100c861021c3660046113d0565b610f57565b600080600083604051610234919061162e565b9081526040805191829003602090810183206101808401835280546001600160a01b039081168552600182015416918401919091526002810154918301919091526003810154606083015260048082015460ff80821660808601526101008204811660a086015260c08501926201000090920416908111156102b8576102b8611405565b60048111156102c9576102c9611405565b815260048201546001600160a01b0363010000009091048116602083015260058301546040830152600683015460ff80821615156060850152610100909104161515608083015260079092015460a0909101528151919250161580159061033b575060208101516001600160a01b0316155b801561035c575060008160c00151600481111561035a5761035a611405565b145b9392505050565b60006001600160a01b031660008260405161037e919061162e565b908152604051908190036020019020546001600160a01b0316146103df5760405162461bcd60e51b8152602060048201526013602482015272526f6f6d20616c72656164792065786973747360681b60448201526064015b60405180910390fd5b6040805161018081018252338152600060208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e08201819052346101008301526001610120830152610140820181905242610160830152915190919061044d90849061162e565b9081526040805160209281900383019020835181546001600160a01b03199081166001600160a01b039283161783559385015160018301805490951691161790925582015160028201556060820151600382015560808201516004808301805460a086015160ff94851661ffff199092169190911761010094909116939093029290921780835560c0850151929162ff00001990911690620100009084908111156104fa576104fa611405565b021790555060e08201516004820180546301000000600160b81b03191663010000006001600160a01b039093169290920291909117905561010080830151600583015561012083015160068301805461014086015161ffff1990911692151561ff0019169290921791151590920217905561016090910151600790910155604051339061058890839061162e565b604051908190038120907fac707a3f26c90292ba0efc38489e4d1f6feb1e99176a84573a02232af25aa08090600090a350565b600080826040516105cc919061162e565b90815260405190819003602001902080549091506001600160a01b031661062b5760405162461bcd60e51b8152602060048201526013602482015272149bdbdb48191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016103d6565b60018101546001600160a01b0316156106755760405162461bcd60e51b815260206004820152600c60248201526b149bdbdb481a5cc8199d5b1b60a21b60448201526064016103d6565b8054336001600160a01b03909116036106d05760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f74206a6f696e20796f7572206f776e20726f6f6d0000000000000060448201526064016103d6565b600060048281015462010000900460ff16908111156106f1576106f1611405565b146107335760405162461bcd60e51b815260206004820152601260248201527147616d65206e6f7420617661696c61626c6560701b60448201526064016103d6565b8060050154341461077d5760405162461bcd60e51b8152602060048201526014602482015273125b98dbdc9c9958dd0818995d08185b5bdd5b9d60621b60448201526064016103d6565b600180820180546001600160a01b0319163317905560068201805461ff00191661010017905560048201805462ff000019166201000083021790555060405133906107c990849061162e565b604051908190038120907f69b91453edfa045ed34feb2b032d08b6c3333ec2404f18b285c7ce7ffe69ba5190600090a35050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915260008260405161086e919061162e565b9081526040805191829003602090810183206101808401835280546001600160a01b039081168552600182015416918401919091526002810154918301919091526003810154606083015260048082015460ff80821660808601526101008204811660a086015260c08501926201000090920416908111156108f2576108f2611405565b600481111561090357610903611405565b81526004820154630100000090046001600160a01b0316602082015260058201546040820152600682015460ff80821615156060840152610100909104161515608082015260079091015460a09091015292915050565b6000808360405161096b919061162e565b9081526040519081900360200190209050600160048281015462010000900460ff169081111561099d5761099d611405565b146109ea5760405162461bcd60e51b815260206004820152601860248201527f47616d65206e6f7420726561647920666f72206d6f766573000000000000000060448201526064016103d6565b80546001600160a01b0316331480610a0e575060018101546001600160a01b031633145b610a2a5760405162461bcd60e51b81526004016103d69061165d565b80546001600160a01b03163303610a9257600281015415610a865760405162461bcd60e51b8152602060048201526016602482015275135bdd9948185b1c9958591e481cdd589b5a5d1d195960521b60448201526064016103d6565b60028101829055610ae5565b600381015415610add5760405162461bcd60e51b8152602060048201526016602482015275135bdd9948185b1c9958591e481cdd589b5a5d1d195960521b60448201526064016103d6565b600381018290555b600281015415801590610afb5750600381015415155b15610b145760048101805462ff00001916620200001790555b6040513390610b2490859061162e565b604051908190038120907f50e90bc778b131f198a22cea654598cd74326a73c5d1f5d05aabe61872e31a0f90600090a3505050565b60008084604051610b6a919061162e565b9081526040519081900360200190209050600260048281015462010000900460ff1690811115610b9c57610b9c611405565b14610be95760405162461bcd60e51b815260206004820152601760248201527f4d6f766573206e6f7420636f6d6d69747465642079657400000000000000000060448201526064016103d6565b60018360ff1610158015610c01575060038360ff1611155b610c3c5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206d6f766560a01b60448201526064016103d6565b80546001600160a01b0316331480610c60575060018101546001600160a01b031633145b610c7c5760405162461bcd60e51b81526004016103d69061165d565b6040516001600160f81b031960f885901b166020820152602181018390526bffffffffffffffffffffffff193360601b16604182015260009060550160408051601f19818403018152919052805160209091012082549091506001600160a01b03163303610d865780826002015414610d285760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c995d99585b60921b60448201526064016103d6565b600482015460ff1615610d705760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b60448201526064016103d6565b60048201805460ff191660ff8616179055610e2e565b80826003015414610dca5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c995d99585b60921b60448201526064016103d6565b6004820154610100900460ff1615610e175760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b60448201526064016103d6565b60048201805461ff00191661010060ff8716021790555b6040513390610e3e90879061162e565b60405190819003812060ff87168252907fa739a77042ec4f4de65a38d9924a30493f04539148456857e1c24f9dbe9e8a9e9060200160405180910390a3600482015460ff1615801590610e9c57506004820154610100900460ff1615155b15610f5057600482015482546001840154610ed19260ff8082169361010090920416916001600160a01b0391821691166112b1565b6004830180546001600160a01b03928316630100000090810262ff0000191662010000600160b81b031990921691909117620400001791829055604051910490911690610f1f90879061162e565b604051908190038120907f8faeeac76a6e18b7d45e0ec2ae51d949cc784f877b0c55bbc21157f141d61cc890600090a35b5050505050565b60008082604051610f68919061162e565b90815260405190819003602001902090506004808281015462010000900460ff1690811115610f9957610f99611405565b14610fda5760405162461bcd60e51b815260206004820152601160248201527011d85b59481b9bdd08199a5b9a5cda1959607a1b60448201526064016103d6565b600681015460ff168015610ff757506006810154610100900460ff165b6110375760405162461bcd60e51b815260206004820152601160248201527042657473206e6f7420636f6d706c65746560781b60448201526064016103d6565b60008160050154600261104a9190611683565b6004830154909150630100000090046001600160a01b03166111955781546001600160a01b031633148061108a575060018201546001600160a01b031633145b6110a65760405162461bcd60e51b81526004016103d69061165d565b81546001600160a01b0316331480156110c35750600682015460ff165b1561111757815460058301546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015611105573d6000803e3d6000fd5b5060068201805460ff1916905561123a565b60018201546001600160a01b03163314801561113c57506006820154610100900460ff165b1561119057600182015460058301546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015611181573d6000803e3d6000fd5b5060068201805461ff00191690555b61123a565b6004820154630100000090046001600160a01b031633146111e95760405162461bcd60e51b815260206004820152600e60248201526d2737ba103a3432903bb4b73732b960911b60448201526064016103d6565b600482015460405163010000009091046001600160a01b0316906108fc8315029083906000818181858888f1935050505015801561122b573d6000803e3d6000fd5b5060068201805461ffff191690555b604051339061124a90859061162e565b60405190819003902060048401547f7175967b5ddee4d7986318165167133a8c193aa59b05f411ec131d4f124a3f3d90630100000090046001600160a01b031615611295578361129b565b84600501545b60405190815260200160405180910390a3505050565b60008360ff168560ff16036112c857506000611325565b8460ff1660011480156112de57508360ff166003145b806112fa57508460ff1660021480156112fa57508360ff166001145b8061131657508460ff16600314801561131657508360ff166002145b15611322575081611325565b50805b949350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261135457600080fd5b813567ffffffffffffffff8082111561136f5761136f61132d565b604051601f8301601f19908116603f011681019082821181831017156113975761139761132d565b816040528381528660208588010111156113b057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156113e257600080fd5b813567ffffffffffffffff8111156113f957600080fd5b61132584828501611343565b634e487b7160e01b600052602160045260246000fd5b6005811061143957634e487b7160e01b600052602160045260246000fd5b9052565b81516001600160a01b031681526101808101602083015161146960208401826001600160a01b03169052565b5060408301516040830152606083015160608301526080830151611492608084018260ff169052565b5060a08301516114a760a084018260ff169052565b5060c08301516114ba60c084018261141b565b5060e08301516114d560e08401826001600160a01b03169052565b506101008381015190830152610120808401511515908301526101408084015115159083015261016092830151929091019190915290565b6000806040838503121561152057600080fd5b823567ffffffffffffffff81111561153757600080fd5b61154385828601611343565b95602094909401359450505050565b6001600160a01b038d811682528c81166020830152604082018c9052606082018b905260ff8a81166080840152891660a083015261018082019061159960c084018a61141b565b9690961660e0820152610100810194909452911515610120840152151561014083015261016090910152979650505050505050565b6000806000606084860312156115e357600080fd5b833567ffffffffffffffff8111156115fa57600080fd5b61160686828701611343565b935050602084013560ff8116811461161d57600080fd5b929592945050506040919091013590565b6000825160005b8181101561164f5760208186018101518583015201611635565b506000920191825250919050565b6020808252600c908201526b2737ba103090383630bcb2b960a11b604082015260600190565b80820281158282048414176116a857634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212200413e606e413a1e10c50a7d64b737f46b21c9bee3df6a45a34d1c19a8586bf6c64736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80635efcb0551161004e5780635efcb0551461010a5780636d20931a1461012a5780639d38e620146101e1578063fdbcf1251461020157600080fd5b8063091c680b146100805780632ebc0504146100b55780633d536a2e146100ca5780634d92f652146100dd575b600080fd5b34801561008c57600080fd5b506100a061009b3660046113d0565b610221565b60405190151581526020015b60405180910390f35b6100c86100c33660046113d0565b610363565b005b6100c86100d83660046113d0565b6105bb565b3480156100e957600080fd5b506100fd6100f83660046113d0565b6107fd565b6040516100ac919061143d565b34801561011657600080fd5b506100c861012536600461150d565b61095a565b34801561013657600080fd5b506101c96101453660046113d0565b8051602081830181018051600082529282019190930120915280546001820154600283015460038401546004850154600586015460068701546007909701546001600160a01b0396871697958716969495939460ff80851695610100808704831696620100008104841696630100000090910490941694838316939190920416908c565b6040516100ac9c9b9a99989796959493929190611552565b3480156101ed57600080fd5b506100c86101fc3660046115ce565b610b59565b34801561020d57600080fd5b506100c861021c3660046113d0565b610f57565b600080600083604051610234919061162e565b9081526040805191829003602090810183206101808401835280546001600160a01b039081168552600182015416918401919091526002810154918301919091526003810154606083015260048082015460ff80821660808601526101008204811660a086015260c08501926201000090920416908111156102b8576102b8611405565b60048111156102c9576102c9611405565b815260048201546001600160a01b0363010000009091048116602083015260058301546040830152600683015460ff80821615156060850152610100909104161515608083015260079092015460a0909101528151919250161580159061033b575060208101516001600160a01b0316155b801561035c575060008160c00151600481111561035a5761035a611405565b145b9392505050565b60006001600160a01b031660008260405161037e919061162e565b908152604051908190036020019020546001600160a01b0316146103df5760405162461bcd60e51b8152602060048201526013602482015272526f6f6d20616c72656164792065786973747360681b60448201526064015b60405180910390fd5b6040805161018081018252338152600060208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e08201819052346101008301526001610120830152610140820181905242610160830152915190919061044d90849061162e565b9081526040805160209281900383019020835181546001600160a01b03199081166001600160a01b039283161783559385015160018301805490951691161790925582015160028201556060820151600382015560808201516004808301805460a086015160ff94851661ffff199092169190911761010094909116939093029290921780835560c0850151929162ff00001990911690620100009084908111156104fa576104fa611405565b021790555060e08201516004820180546301000000600160b81b03191663010000006001600160a01b039093169290920291909117905561010080830151600583015561012083015160068301805461014086015161ffff1990911692151561ff0019169290921791151590920217905561016090910151600790910155604051339061058890839061162e565b604051908190038120907fac707a3f26c90292ba0efc38489e4d1f6feb1e99176a84573a02232af25aa08090600090a350565b600080826040516105cc919061162e565b90815260405190819003602001902080549091506001600160a01b031661062b5760405162461bcd60e51b8152602060048201526013602482015272149bdbdb48191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016103d6565b60018101546001600160a01b0316156106755760405162461bcd60e51b815260206004820152600c60248201526b149bdbdb481a5cc8199d5b1b60a21b60448201526064016103d6565b8054336001600160a01b03909116036106d05760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f74206a6f696e20796f7572206f776e20726f6f6d0000000000000060448201526064016103d6565b600060048281015462010000900460ff16908111156106f1576106f1611405565b146107335760405162461bcd60e51b815260206004820152601260248201527147616d65206e6f7420617661696c61626c6560701b60448201526064016103d6565b8060050154341461077d5760405162461bcd60e51b8152602060048201526014602482015273125b98dbdc9c9958dd0818995d08185b5bdd5b9d60621b60448201526064016103d6565b600180820180546001600160a01b0319163317905560068201805461ff00191661010017905560048201805462ff000019166201000083021790555060405133906107c990849061162e565b604051908190038120907f69b91453edfa045ed34feb2b032d08b6c3333ec2404f18b285c7ce7ffe69ba5190600090a35050565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915260008260405161086e919061162e565b9081526040805191829003602090810183206101808401835280546001600160a01b039081168552600182015416918401919091526002810154918301919091526003810154606083015260048082015460ff80821660808601526101008204811660a086015260c08501926201000090920416908111156108f2576108f2611405565b600481111561090357610903611405565b81526004820154630100000090046001600160a01b0316602082015260058201546040820152600682015460ff80821615156060840152610100909104161515608082015260079091015460a09091015292915050565b6000808360405161096b919061162e565b9081526040519081900360200190209050600160048281015462010000900460ff169081111561099d5761099d611405565b146109ea5760405162461bcd60e51b815260206004820152601860248201527f47616d65206e6f7420726561647920666f72206d6f766573000000000000000060448201526064016103d6565b80546001600160a01b0316331480610a0e575060018101546001600160a01b031633145b610a2a5760405162461bcd60e51b81526004016103d69061165d565b80546001600160a01b03163303610a9257600281015415610a865760405162461bcd60e51b8152602060048201526016602482015275135bdd9948185b1c9958591e481cdd589b5a5d1d195960521b60448201526064016103d6565b60028101829055610ae5565b600381015415610add5760405162461bcd60e51b8152602060048201526016602482015275135bdd9948185b1c9958591e481cdd589b5a5d1d195960521b60448201526064016103d6565b600381018290555b600281015415801590610afb5750600381015415155b15610b145760048101805462ff00001916620200001790555b6040513390610b2490859061162e565b604051908190038120907f50e90bc778b131f198a22cea654598cd74326a73c5d1f5d05aabe61872e31a0f90600090a3505050565b60008084604051610b6a919061162e565b9081526040519081900360200190209050600260048281015462010000900460ff1690811115610b9c57610b9c611405565b14610be95760405162461bcd60e51b815260206004820152601760248201527f4d6f766573206e6f7420636f6d6d69747465642079657400000000000000000060448201526064016103d6565b60018360ff1610158015610c01575060038360ff1611155b610c3c5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206d6f766560a01b60448201526064016103d6565b80546001600160a01b0316331480610c60575060018101546001600160a01b031633145b610c7c5760405162461bcd60e51b81526004016103d69061165d565b6040516001600160f81b031960f885901b166020820152602181018390526bffffffffffffffffffffffff193360601b16604182015260009060550160408051601f19818403018152919052805160209091012082549091506001600160a01b03163303610d865780826002015414610d285760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c995d99585b60921b60448201526064016103d6565b600482015460ff1615610d705760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b60448201526064016103d6565b60048201805460ff191660ff8616179055610e2e565b80826003015414610dca5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c995d99585b60921b60448201526064016103d6565b6004820154610100900460ff1615610e175760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b60448201526064016103d6565b60048201805461ff00191661010060ff8716021790555b6040513390610e3e90879061162e565b60405190819003812060ff87168252907fa739a77042ec4f4de65a38d9924a30493f04539148456857e1c24f9dbe9e8a9e9060200160405180910390a3600482015460ff1615801590610e9c57506004820154610100900460ff1615155b15610f5057600482015482546001840154610ed19260ff8082169361010090920416916001600160a01b0391821691166112b1565b6004830180546001600160a01b03928316630100000090810262ff0000191662010000600160b81b031990921691909117620400001791829055604051910490911690610f1f90879061162e565b604051908190038120907f8faeeac76a6e18b7d45e0ec2ae51d949cc784f877b0c55bbc21157f141d61cc890600090a35b5050505050565b60008082604051610f68919061162e565b90815260405190819003602001902090506004808281015462010000900460ff1690811115610f9957610f99611405565b14610fda5760405162461bcd60e51b815260206004820152601160248201527011d85b59481b9bdd08199a5b9a5cda1959607a1b60448201526064016103d6565b600681015460ff168015610ff757506006810154610100900460ff165b6110375760405162461bcd60e51b815260206004820152601160248201527042657473206e6f7420636f6d706c65746560781b60448201526064016103d6565b60008160050154600261104a9190611683565b6004830154909150630100000090046001600160a01b03166111955781546001600160a01b031633148061108a575060018201546001600160a01b031633145b6110a65760405162461bcd60e51b81526004016103d69061165d565b81546001600160a01b0316331480156110c35750600682015460ff165b1561111757815460058301546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015611105573d6000803e3d6000fd5b5060068201805460ff1916905561123a565b60018201546001600160a01b03163314801561113c57506006820154610100900460ff165b1561119057600182015460058301546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015611181573d6000803e3d6000fd5b5060068201805461ff00191690555b61123a565b6004820154630100000090046001600160a01b031633146111e95760405162461bcd60e51b815260206004820152600e60248201526d2737ba103a3432903bb4b73732b960911b60448201526064016103d6565b600482015460405163010000009091046001600160a01b0316906108fc8315029083906000818181858888f1935050505015801561122b573d6000803e3d6000fd5b5060068201805461ffff191690555b604051339061124a90859061162e565b60405190819003902060048401547f7175967b5ddee4d7986318165167133a8c193aa59b05f411ec131d4f124a3f3d90630100000090046001600160a01b031615611295578361129b565b84600501545b60405190815260200160405180910390a3505050565b60008360ff168560ff16036112c857506000611325565b8460ff1660011480156112de57508360ff166003145b806112fa57508460ff1660021480156112fa57508360ff166001145b8061131657508460ff16600314801561131657508360ff166002145b15611322575081611325565b50805b949350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261135457600080fd5b813567ffffffffffffffff8082111561136f5761136f61132d565b604051601f8301601f19908116603f011681019082821181831017156113975761139761132d565b816040528381528660208588010111156113b057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156113e257600080fd5b813567ffffffffffffffff8111156113f957600080fd5b61132584828501611343565b634e487b7160e01b600052602160045260246000fd5b6005811061143957634e487b7160e01b600052602160045260246000fd5b9052565b81516001600160a01b031681526101808101602083015161146960208401826001600160a01b03169052565b5060408301516040830152606083015160608301526080830151611492608084018260ff169052565b5060a08301516114a760a084018260ff169052565b5060c08301516114ba60c084018261141b565b5060e08301516114d560e08401826001600160a01b03169052565b506101008381015190830152610120808401511515908301526101408084015115159083015261016092830151929091019190915290565b6000806040838503121561152057600080fd5b823567ffffffffffffffff81111561153757600080fd5b61154385828601611343565b95602094909401359450505050565b6001600160a01b038d811682528c81166020830152604082018c9052606082018b905260ff8a81166080840152891660a083015261018082019061159960c084018a61141b565b9690961660e0820152610100810194909452911515610120840152151561014083015261016090910152979650505050505050565b6000806000606084860312156115e357600080fd5b833567ffffffffffffffff8111156115fa57600080fd5b61160686828701611343565b935050602084013560ff8116811461161d57600080fd5b929592945050506040919091013590565b6000825160005b8181101561164f5760208186018101518583015201611635565b506000920191825250919050565b6020808252600c908201526b2737ba103090383630bcb2b960a11b604082015260600190565b80820281158282048414176116a857634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212200413e606e413a1e10c50a7d64b737f46b21c9bee3df6a45a34d1c19a8586bf6c64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 38,
        "contract": "contracts/RPSOnline.sol:RPSOnline",
        "label": "games",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Game)33_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(GameState)7": {
        "encoding": "inplace",
        "label": "enum RPSOnline.GameState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Game)33_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct RPSOnline.Game)",
        "numberOfBytes": "32",
        "value": "t_struct(Game)33_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Game)33_storage": {
        "encoding": "inplace",
        "label": "struct RPSOnline.Game",
        "members": [
          {
            "astId": 9,
            "contract": "contracts/RPSOnline.sol:RPSOnline",
            "label": "player1",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 11,
            "contract": "contracts/RPSOnline.sol:RPSOnline",
            "label": "player2",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 13,
            "contract": "contracts/RPSOnline.sol:RPSOnline",
            "label": "player1Move",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          },
          {
            "astId": 15,
            "contract": "contracts/RPSOnline.sol:RPSOnline",
            "label": "player2Move",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes32"
          },
          {
            "astId": 17,
            "contract": "contracts/RPSOnline.sol:RPSOnline",
            "label": "revealedMove1",
            "offset": 0,
            "slot": "4",
            "type": "t_uint8"
          },
          {
            "astId": 19,
            "contract": "contracts/RPSOnline.sol:RPSOnline",
            "label": "revealedMove2",
            "offset": 1,
            "slot": "4",
            "type": "t_uint8"
          },
          {
            "astId": 22,
            "contract": "contracts/RPSOnline.sol:RPSOnline",
            "label": "state",
            "offset": 2,
            "slot": "4",
            "type": "t_enum(GameState)7"
          },
          {
            "astId": 24,
            "contract": "contracts/RPSOnline.sol:RPSOnline",
            "label": "winner",
            "offset": 3,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 26,
            "contract": "contracts/RPSOnline.sol:RPSOnline",
            "label": "betAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 28,
            "contract": "contracts/RPSOnline.sol:RPSOnline",
            "label": "player1Paid",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 30,
            "contract": "contracts/RPSOnline.sol:RPSOnline",
            "label": "player2Paid",
            "offset": 1,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 32,
            "contract": "contracts/RPSOnline.sol:RPSOnline",
            "label": "createdAt",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}